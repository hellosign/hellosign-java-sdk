apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
    options.compilerArgs.addAll(['--release', '8']) // for java 8 cross-compilation
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName:  findProperty('ossrhUsername'), password:  findProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName:  findProperty('ossrhUsername'), password:  findProperty('ossrhPassword'))
            }

            pom.project {
                name 'HelloSign'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Use the HelloSign Java SDK to connect your Java app to HelloSign\'s service in microseconds!'
                url 'https://www.hellosign.com/'

                scm {
                    connection 'scm:git:git://github.com/hellosign/hellosign-java-sdk.git'
                    developerConnection 'scm:git:git@github.com:hellosign/hellosign-java-sdk.git'
                    url 'https://github.com/hellosign/hellosign-java-sdk'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id 'jspaetzel'
                        name 'John Spaetzel'
                        email 'john.spaetzel@hellosign.com'
                        url 'https://www.hellosign.com'
                    }
                }
            }
        }
    }
}

task fatJar(type: Jar) {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.json', name: 'json', version:'20210307'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.30'
    compile group: 'commons-codec', name: 'commons-codec', version:'1.15'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    testCompile group: 'junit', name: 'junit', version:'4.13.2'
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.30'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'3.9.0'
}
